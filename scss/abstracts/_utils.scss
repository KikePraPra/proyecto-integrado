@use "../abstracts/media-queries" as mq;

.grid{
    display: grid;
}

.flex{
    display: flex;
}

.absolute{
    position: absolute;
}

.relative{
    position: relative;
}

.auto{
    margin: auto;
}

.hidden{
    overflow: hidden;
}

.align-center{
    align-items: center;
}

.justify-center{
    justify-content: center;
}

.padding-left{
    padding-left: 10rem;

    @include mq.respond-to(mq.$phone){
        padding-left: 0;
    }
}
.padding-right{
    padding-right: 5rem;

    @include mq.respond-to(mq.$phone){
        padding-right: 0;
    }
}

/*este método no fue completamente hecho por ia pero se utilizó este prompt, posterior a preguntar
 si un mixin podía recibir más de un parámetro: "y si quisiera hacer un mixin que reciba la dirección de un padding y al mismo tiempo el tamaño
 del padding, esto es posible?" */

@mixin padding($n, $direction){
    @if $direction == 'left'{
        padding-left: $n+rem;

        @include mq.respond-to(mq.$phone){
            padding-left: $n/2+rem;
        }

    }
    @else if $direction == 'right'{
        padding-right: $n+rem;
    }
    @else if $direction == 'bottom'{
        padding-bottom: $n+rem;
    }
    @else{
        padding-top: $n+rem;

        @include mq.respond-to(mq.$phone){
            padding-top: $n/2+rem;
        }
    }
}

//este método se realizó pensando en el responsive, acabo de notar que no tuvo mayor uso...

.mt-1{ margin-top: 1rem; }
.mt-2{ margin-top: 2rem; }
.mt-3{ margin-top: 3rem; }
.mt-4{ margin-top: 4rem; }
.mt-5{ margin-top: 5rem; }

.mb-1{ margin-bottom: 1rem; }
.mb-2{ margin-bottom: 2rem; }
.mb-3{ margin-bottom: 3rem; }
.mb-4{ margin-bottom: 4rem; }
.mb-5{ margin-bottom: 5rem; }

.ml-1{ margin-left: 1rem; }
.ml-2{ margin-left: 2rem; }
.ml-3{ margin-left: 3rem; }
.ml-4{ margin-left: 4rem; }
.ml-5{ margin-left: 5rem; }

.pt-1{padding-top: 1rem; }
.pt-2{padding-top: 2rem; }
.pt-3{padding-top: 3rem; }
.pt-4{padding-top: 4rem; }
.pt-5{ @include padding(5, 'top'); }
.pt-7{padding-top: 7rem; }
.pt-10{ @include padding(10, 'top'); }
.pt-19{ padding-top: 19rem;
    @include mq.respond-to(mq.$phone){
        padding-top: 0;
    }
}

.pb-1{padding-bottom: 1rem; }
.pb-2{padding-bottom: 2rem; }
.pb-3{padding-bottom: 3rem; }
.pb-4{padding-bottom: 4rem; }
.pb-5{padding-bottom: 5rem; }
.pb-10{padding-bottom: 10rem;

    @include mq.respond-to(mq.$phone){
        padding-bottom: 2rem;
    }
}

.pl-4{padding-left: 4rem;}

.mobile-img{
    @include mq.respond-to(mq.$phone){
        width: 75%;
        margin: auto;
    }
}

.larger-img{
    @include mq.respond-to(mq.$phone){
        width: 55%;
    }
}

.mobile-text-center{
    @include mq.respond-to(mq.$phone){
        text-align: center;
    }
}

.z-index1{
    @include mq.respond-to(mq.$phone){
        z-index: 1;
    }
}
.z-index2{
    @include mq.respond-to(mq.$phone){
        z-index: 2;
    }
}

.shadows{
    @include mq.respond-to(mq.$phone){
        text-shadow: -4px 5px 6px black;
    }
}

.mobile-mb{
    @include mq.respond-to(mq.$phone){
        margin-bottom: 18rem;
    }
}
